[1/15] Linking C static library esp-idf/espressif__led_strip/libespressif__led_strip.a
[2/15] Linking C static library esp-idf/mqtt/libmqtt.a
[3/15] Linking C static library esp-idf/spiffs/libspiffs.a
[4/15] Linking C static library esp-idf/fatfs/libfatfs.a
[5/15] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[6/15] Performing build step for 'bootloader'
[1/1] cd /Users/jacob/Documents/EC444/Chin-Jacob/skills/cluster-0/06/code/build/bootloader/esp-idf/esptool_py && /Users/jacob/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/jacob/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/jacob/Documents/EC444/Chin-Jacob/skills/cluster-0/06/code/build/bootloader/bootloader.bin
Bootloader binary size 0x6910 bytes. 0x6f0 bytes (6%) free.
[7/15] No install step for 'bootloader'
[8/15] Completed 'bootloader'
[9/15] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink_example_main.c.obj
[10/15] Linking C static library esp-idf/main/libmain.a
[11/15] Generating ld/sections.ld
[12/15] Building C object CMakeFiles/blink.elf.dir/project_elf_src_esp32.c.obj
[13/15] Linking CXX executable blink.elf
[14/15] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/jacob/Documents/EC444/Chin-Jacob/skills/cluster-0/06/code/build/blink.bin
[15/15] cd /Users/jacob/Documents/EC444/Chin-Jacob/skills/cluster-0/06/code/build/esp-idf/esptool_py && /Users/jacob/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/jacob/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/jacob/Documents/EC444/Chin-Jacob/skills/cluster-0/06/code/build/partition_table/partition-table.bin /Users/jacob/Documents/EC444/Chin-Jacob/skills/cluster-0/06/code/build/blink.bin
blink.bin binary size 0x2bcb0 bytes. Smallest app partition is 0x100000 bytes. 0xd4350 bytes (83%) free.
